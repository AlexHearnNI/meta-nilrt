From ecf8f2de81795eeebc953c79e95fa4e6f51e5df7 Mon Sep 17 00:00:00 2001
From: Haris Okanovic <haris.okanovic@ni.com>
Date: Fri, 8 Jan 2016 13:35:50 -0600
Subject: [PATCH] libopkg: Add intercepts_dir option to opkg.conf

Add an intercepts_dir option defaulted to $DATADIR/opkg/intercept or
$offline_root/$DATADIR/opkg/intercept when offline_root is set, instead
of hard-coding a path in opkg_cmd.c. DATADIR is a compile-time constant
that's typically /usr/share or /usr/local/share on most distribution.

The motivating use case for this change is Yocto bug 8837:

An IPK installs a shared library or kernel module, then
postinst calls `ldconfig` or `depmod -a`, respectively, to register it.
Subsequent IPKs relying on those libs/ko's in their postinst's may
fail under the default configuration, since opkg defers registration
until after all postinst's run.

This option allows maintainers/sysadmins to fix the problem by
completely disabling intercepts for a minor performance penalty.

https://bugzilla.yoctoproject.org/show_bug.cgi?id=8837

Signed-off-by: Haris Okanovic <haris.okanovic@ni.com>
Cc: Alejandro del Castillo <alejandro.delcastillo@ni.com>
Cc: Josh Cartwright <joshc@ni.com>

Upstream-Status: Submitted [opkg-devel@googlegroups.com]

---
 libopkg/opkg_cmd.c  | 5 ++++-
 libopkg/opkg_conf.c | 9 +++++++++
 libopkg/opkg_conf.h | 1 +
 3 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/libopkg/opkg_cmd.c b/libopkg/opkg_cmd.c
index 050e6ecf444b5f9c80e4988b78e1340ac3942ff7..079efa290f0fc91feb10d11d4d9ffcf0f1004934 100644
--- a/libopkg/opkg_cmd.c
+++ b/libopkg/opkg_cmd.c
@@ -179,7 +179,7 @@ static opkg_intercept_t opkg_prep_intercepts(void)
 
     ctx = xcalloc(1, sizeof(*ctx));
     ctx->oldpath = xstrdup(getenv("PATH"));
-    sprintf_alloc(&newpath, "%s/opkg/intercept:%s", DATADIR, ctx->oldpath);
+    sprintf_alloc(&newpath, "%s:%s", opkg_config->intercepts_dir, ctx->oldpath);
     sprintf_alloc(&ctx->statedir, "%s/opkg-intercept-XXXXXX",
                   opkg_config->tmp_dir);
 
@@ -195,6 +195,7 @@ static opkg_intercept_t opkg_prep_intercepts(void)
 
     setenv("OPKG_INTERCEPT_DIR", ctx->statedir, 1);
     setenv("PATH", newpath, 1);
+    opkg_msg(DEBUG, "Added intercepts dir to PATH; new PATH=%s\n", newpath);
     free(newpath);
 
     return ctx;
@@ -206,6 +207,7 @@ static int opkg_finalize_intercepts(opkg_intercept_t ctx)
     int err = 0;
 
     setenv("PATH", ctx->oldpath, 1);
+    opkg_msg(DEBUG, "Removed intercepts dir from PATH; old PATH=%s\n", ctx->oldpath);
     free(ctx->oldpath);
 
     dir = opendir(ctx->statedir);
@@ -220,6 +222,7 @@ static int opkg_finalize_intercepts(opkg_intercept_t ctx)
             sprintf_alloc(&path, "%s/%s", ctx->statedir, de->d_name);
             if (access(path, X_OK) == 0) {
                 const char *argv[] = { "sh", "-c", path, NULL };
+                opkg_msg(DEBUG, "Run intercepted script %s\n", path);
                 xsystem(argv);
             }
             free(path);
diff --git a/libopkg/opkg_conf.c b/libopkg/opkg_conf.c
index f52a4db098da99324af529288e8c39943b6cbe12..46a70b095a89bbf96d02d271131f0431e5d25d13 100644
--- a/libopkg/opkg_conf.c
+++ b/libopkg/opkg_conf.c
@@ -47,6 +47,7 @@ opkg_conf_t *opkg_config = &_conf;
  */
 static opkg_option_t options[] = {
     {"cache_dir", OPKG_OPT_TYPE_STRING, &_conf.cache_dir},
+    {"intercepts_dir", OPKG_OPT_TYPE_STRING, &_conf.intercepts_dir},
     {"lists_dir", OPKG_OPT_TYPE_STRING, &_conf.lists_dir},
     {"lock_file", OPKG_OPT_TYPE_STRING, &_conf.lock_file},
     {"info_dir", OPKG_OPT_TYPE_STRING, &_conf.info_dir},
@@ -703,6 +704,9 @@ int opkg_conf_load(void)
     hash_table_init("obs-file-hash", &opkg_config->obs_file_hash,
                     OPKG_CONF_DEFAULT_HASH_LEN / 16);
 
+    if (opkg_config->intercepts_dir == NULL)
+        sprintf_alloc(&opkg_config->intercepts_dir, "%s/opkg/intercept", DATADIR);
+
     if (opkg_config->lists_dir == NULL)
         opkg_config->lists_dir = xstrdup(OPKG_CONF_DEFAULT_LISTS_DIR);
 
@@ -711,6 +715,11 @@ int opkg_conf_load(void)
 
     if (opkg_config->offline_root) {
         sprintf_alloc(&tmp, "%s/%s", opkg_config->offline_root,
+                      opkg_config->intercepts_dir);
+        free(opkg_config->intercepts_dir);
+        opkg_config->intercepts_dir = tmp;
+
+        sprintf_alloc(&tmp, "%s/%s", opkg_config->offline_root,
                       opkg_config->lists_dir);
         free(opkg_config->lists_dir);
         opkg_config->lists_dir = tmp;
diff --git a/libopkg/opkg_conf.h b/libopkg/opkg_conf.h
index 7460ca26f00ecf03882aeec64bcb794ad9a97e96..3c72ab06f4a59c3a9a69dc1319ad035881180da4 100644
--- a/libopkg/opkg_conf.h
+++ b/libopkg/opkg_conf.h
@@ -65,6 +65,7 @@ typedef struct opkg_conf {
     char *conf_file;
 
     char *tmp_dir;
+    char *intercepts_dir;
     char *lists_dir;
     char *cache_dir;
     char *lock_file;
-- 
2.6.2

