#!/bin/bash
set -e
source "/usr/lib/nilrtdiskcrypt.common"

function print_usage_and_die () {
    local message="$1"
    cat >&2 <<ENDHELP
ERROR: $message

Usage: $0 [ -s sealedKeySlotSource ] [ -d unsealedKeySlotDestination ... ]
 Reads and unseals one disk key from the specified source slot and stores said unsealed
 key into destination slots (must specify at least one destination slot).
ENDHELP
    exit 1
}

# get args
sealedKeySlotNumber=""
unsealedKeySlotNumbers=""

while getopts "s:d:" opt; do
    case "$opt" in
    s )  [ -z "$sealedKeySlotNumber" ] && sealedKeySlotNumber="$OPTARG" || print_usage_and_die "Cannot specify more than one source key slot number" ;;
    d )  unsealedKeySlotNumbers="$unsealedKeySlotNumbers $OPTARG" ;;
    \?)  print_usage_and_die "Invalid arg" ;;
    esac
done
shift $(($OPTIND - 1))

[ -n "$sealedKeySlotNumber" ] || print_usage_and_die "Must specify a source key slot (-s)"
[ -n "$unsealedKeySlotNumbers" ] || print_usage_and_die "Must specify at least one destination key slot (-d)"

status "Init"
take_lock
cd_to_empty
init_work_dir

status "Downloading & unsealing key slot $sealedKeySlotNumber"
downloadHandle="`get_key_slot_handle "$sealedKeySlotNumber"`"
download_disk_key "$downloadHandle"
pack_unsealed_key

for ksNumb in $unsealedKeySlotNumbers; do
    status "Writing unsealed key to slot $ksNumb"
    uploadHandle="`get_key_slot_handle "$ksNumb"`"
    nvwrite_file "key.unsealed.gz" "$uploadHandle"
done

status "Removing unsealed key"
clear_work_dir

status "SUCCESS"
