#!/bin/bash
SCRIPT_NAME="niopendisks"

# begin output
echo -n "$SCRIPT_NAME: " || true

# close stdin
exec 0<&-

function warn () {
    echo >&2 "$SCRIPT_NAME: WARNING: $*" || true
}

function error () {
    echo >&2 "$SCRIPT_NAME: ERROR: $*"
    exit 1
}

[ "$#" -gt 0 ] || error "Must provide at least one arg"
[ "$1" == "start" ] || error "Only 'start' operation is supported"

# Mount /var/volatile and /dev, used by nilrtdiskcrypt
mounted_volatile=true
mounted_dev=true
mount -t tmpfs tmpfs /var/volatile || mounted_volatile=false
mount -t devtmpfs devtmpfs /dev || mounted_dev=false

# suppress stdout and stderr if echo fails, so that subsequent
#  tools dont error out when prints occur
if ! echo -n " "; then
    exec 1>/dev/null
fi
if ! echo -n " " 1>&2; then
    exec 2>&1
fi

CONFIGFS_DEV="/dev/$(lsblk -l -n -o PARTLABEL,NAME | grep '^niconfig '| tr -s ' ' | cut -d' ' -f2)"
ROOTFS_DEV="/dev/$(lsblk -l -n -o PARTLABEL,NAME | grep '^nirootfs '| tr -s ' ' | cut -d' ' -f2)"

# setup VERBOSE flag for nilrtdiskcrypt
if [ "${VERBOSE+x}" == "yes" ]; then
    export VERBOSE=1
else
    export VERBOSE=0
fi

modprobe tpm_tis
if [ -e "/dev/tpm0" ] && nilrtdiskcrypt_canopen -d "$ROOTFS_DEV" -d "$CONFIGFS_DEV"; then
    if [ -f /etc/natinst/safemode ]; then
        nilrtdiskcrypt_open -k 0 -d "$ROOTFS_DEV" -d "$CONFIGFS_DEV" >/dev/null
        mount -L nirootfs
        mount -L niconfig
    else
        nilrtdiskcrypt_open -k 1 -d "$CONFIGFS_DEV" >/dev/null
        mount -L niconfig
    fi

    [ -f "/etc/tpm/disable_key_unseal" ] && nilrtdiskcrypt_disableunseal
else
    modprobe -r tpm_tis
    remaining_modules="`lsmod | grep tpm || true`"
    [ -z "$remaining_modules" ] || warn "TPM modules remaining after cleanup: $remaining_modules"
fi

# Umount /var/volatile and /dev, if mounted earlier
$mounted_dev && umount /dev
$mounted_volatile && umount /var/volatile

# everything finished, end output
echo "OK"
