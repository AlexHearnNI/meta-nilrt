From 3a8114c5218f54154ebb4a60857706f6e606841c Mon Sep 17 00:00:00 2001
From: Joe Hershberger <joe.hershberger@ni.com>
Date: Tue, 13 Aug 2013 14:17:41 -0500
Subject: [PATCH 2/2] fw_printenv: Don't bail out directly after one env read
 error

When using a redundant environment a read error should simply mean to
not use that copy instead of giving up completely. The other copy may
be just fine.

Upstream-Status: Backport [master commit 3925b2ac97b50b1]

Signed-off-by: Joe Hershberger <joe.hershberger@ni.com>
Signed-off-by: Ioan-Adrian Ratiu <adrian.ratiu@ni.com>
---
 tools/env/fw_env.c | 27 +++++++++++++++++----------
 1 file changed, 17 insertions(+), 10 deletions(-)

diff --git a/tools/env/fw_env.c b/tools/env/fw_env.c
index 5d3186c250..f5d573d484 100644
--- a/tools/env/fw_env.c
+++ b/tools/env/fw_env.c
@@ -1352,14 +1352,21 @@ int fw_env_open(struct env_opts *opts)
 	}
 
 	dev_current = 0;
-	if (flash_io(O_RDONLY)) {
+
+	if (!flash_io(O_RDONLY)) {
+		crc0 = crc32 (0, (uint8_t *) environment.data, ENV_SIZE);
+		crc0_ok = (crc0 == *environment.crc);
+	} else if (HaveRedundEnv) {
+		/*
+		 * to give the redundant env a chance, maybe it's good:
+		 * mark env crc0 invalid then test below if crc1 is ok
+		 */
+		crc0_ok = 0;
+	} else {
 		ret = -EIO;
 		goto open_cleanup;
 	}
 
-	crc0 = crc32 (0, (uint8_t *) environment.data, ENV_SIZE);
-
-	crc0_ok = (crc0 == *environment.crc);
 	if (!HaveRedundEnv) {
 		if (!crc0_ok) {
 			fprintf (stderr,
@@ -1386,8 +1393,10 @@ int fw_env_open(struct env_opts *opts)
 		 */
 		environment.image = addr1;
 		if (flash_io(O_RDONLY)) {
-			ret = -EIO;
-			goto open_cleanup;
+			crc1_ok = 0;
+		} else {
+			crc1 = crc32 (0, (uint8_t *) redundant->data, ENV_SIZE);
+			crc1_ok = (crc1 == redundant->crc);
 		}
 
 		/* Check flag scheme compatibility */
@@ -1413,9 +1422,6 @@ int fw_env_open(struct env_opts *opts)
 			goto open_cleanup;
 		}
 
-		crc1 = crc32 (0, (uint8_t *) redundant->data, ENV_SIZE);
-
-		crc1_ok = (crc1 == redundant->crc);
 		flag1 = redundant->flags;
 
 		if (crc0_ok && !crc1_ok) {
@@ -1459,7 +1465,8 @@ int fw_env_open(struct env_opts *opts)
 			default:
 				fprintf (stderr, "Unknown flag scheme %u \n",
 					 environment.flag_scheme);
-				return -1;
+				ret = -EINVAL;
+				goto open_cleanup;
 			}
 		}
 
-- 
2.17.1

