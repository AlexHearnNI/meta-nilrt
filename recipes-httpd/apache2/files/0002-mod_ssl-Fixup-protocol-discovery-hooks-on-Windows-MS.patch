From 55d36459c1bcb362fcc9487a38308adb8f097fc5 Mon Sep 17 00:00:00 2001
From: Haris Okanovic <haris.okanovic@ni.com>
Date: Thu, 25 Feb 2016 18:21:27 -0600
Subject: [PATCH 2/2] mod_ssl: Fixup protocol discovery hooks on Windows/MSVC

This is a fixup to change 79d4d4d3 that was backported from master as
npn-patch-2.4.7.patch. It's not broken on Linux because of the way
DSO imports/exports are declared, but Windows/MSVC's dllimport/dllexport
is less permissive.

The aforementioned patch uses macro
APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL()
to define a hook function in mod_ssl. The call invokes APR's adornment
macros (2nd parameter "AP") that emotes a dllimport-ed function
implementation in MSVC, a violation of C2491.

This change switches the second parameter of APR_DECLARE_EXTERNAL_HOOK()
and APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL() to "SSL" to use adornment
macros defined in mod_ssl.h instead of APR code. This is how other
modules like mod_status use APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL().

The two hooks (npn_advertise_protos_hook, npn_proto_negotiated_hook)
were completely refactored later on in master (afa9bc99), so this patch
is therefore not appropriate for up-streaming to Apache. This patch
may be dropped whenever afa9bc99 makes it into a release.

Upstream-Status: Inappropriate [rearchitected upstream by afa9bc99]

Signed-off-by: Haris Okanovic <haris.okanovic@ni.com>
---
 modules/ssl/mod_ssl.c | 4 ++--
 modules/ssl/mod_ssl.h | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/modules/ssl/mod_ssl.c b/modules/ssl/mod_ssl.c
index 5fa9a50..94ce539 100644
--- a/modules/ssl/mod_ssl.c
+++ b/modules/ssl/mod_ssl.c
@@ -281,13 +281,13 @@ static const command_rec ssl_config_cmds[] = {
 
 /* Implement 'modssl_run_npn_advertise_protos_hook'. */
 APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(
-    modssl, AP, int, npn_advertise_protos_hook,
+    modssl, SSL, int, npn_advertise_protos_hook,
     (conn_rec *connection, apr_array_header_t *protos),
     (connection, protos), OK, DECLINED);
 
 /* Implement 'modssl_run_npn_proto_negotiated_hook'. */
 APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(
-    modssl, AP, int, npn_proto_negotiated_hook,
+    modssl, SSL, int, npn_proto_negotiated_hook,
     (conn_rec *connection, const char *proto_name, apr_size_t proto_name_len),
     (connection, proto_name, proto_name_len), OK, DECLINED);
 
diff --git a/modules/ssl/mod_ssl.h b/modules/ssl/mod_ssl.h
index bf8eeda..9916df8 100644
--- a/modules/ssl/mod_ssl.h
+++ b/modules/ssl/mod_ssl.h
@@ -90,7 +90,7 @@ APR_DECLARE_OPTIONAL_FN(int, ssl_engine_disable, (conn_rec *));
  * given the connection and an APR array; it should push one or more char*'s
  * pointing to null-terminated strings (such as "http/1.1" or "spdy/2") onto
  * the array and return OK, or do nothing and return DECLINED. */
-APR_DECLARE_EXTERNAL_HOOK(modssl, AP, int, npn_advertise_protos_hook,
+APR_DECLARE_EXTERNAL_HOOK(modssl, SSL, int, npn_advertise_protos_hook,
                           (conn_rec *connection, apr_array_header_t *protos));
 
 /** The npn_proto_negotiated optional hook allows other modules to discover the
@@ -101,7 +101,7 @@ APR_DECLARE_EXTERNAL_HOOK(modssl, AP, int, npn_advertise_protos_hook,
  * connection, a non-null-terminated string containing the protocol name, and
  * the length of the string; it should do something appropriate (i.e. insert or
  * remove filters) and return OK, or do nothing and return DECLINED. */
-APR_DECLARE_EXTERNAL_HOOK(modssl, AP, int, npn_proto_negotiated_hook,
+APR_DECLARE_EXTERNAL_HOOK(modssl, SSL, int, npn_proto_negotiated_hook,
                           (conn_rec *connection, const char *proto_name,
                            apr_size_t proto_name_len));
 
-- 
2.6.2

