set restore_files="bzImage ramdisk"
set nilrt_bootloader="/boot/grubx64.efi"
set nilrt_configfile="/boot/grub.cfg"

function is_normal_boot {
	if [ -s /boot/bootmode ]; then
		source /boot/bootmode
	fi
	if [ $grub_platform = "efi"]; then
		if [ ! -s $nilrt_bootloader ]; then
			return 1
		fi
	else
		if [ ! -s $nilrt_configfile ]; then
			return 1
		fi
	fi
	if [ $BOOT_MODE = "restore" -o $BOOT_MODE = "auto-restore" ]; then
		return 1
	fi
	return 0
}

function is_valid_restoremode {
	for file in $restore_files
	do
		if [ ! -s /$file ]; then
			return 1
		fi
	done
	return 0
}


function set_root_nilrt {
	search.fs_label nilrt root -n --hint hd0,gpt3
}


function set_root_restore {
	search.fs_label nirestore root -n --hint hd0,gpt2
}

function load_nilrt {
	if [ $grub_platform = "efi" ]; then
		chainloader $nilrt_bootloader
		boot
	else
		configfile $nilrt_configfile
	fi
}

function boot_restore {
	linux /bzImage rootwait restore=$BOOT_MODE
	initrd /ramdisk
	boot
}

function panic {
	set timeout=10
	menuentry 'No valid OS. Insert NI Recovery key and reboot' {
		reboot
	}
}

set_root_nilrt
if is_normal_boot; then
	load_nilrt
fi

set_root_restore
if is_valid_restoremode; then
	boot_restore
fi

panic
