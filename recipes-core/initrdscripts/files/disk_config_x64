#!/bin/bash

install_default_error_handler()
{
    trap 'handle_err ${BASH_SOURCE} ${LINENO} ${FUNCNAME:-unknown} $? "$BASH_COMMAND"' ERR
}

handle_err()
{
    TMP_EVAL=`eval echo $5`
    die "$1:$2 (fn=$3): Unexpected status code $4 while running command: '$TMP_EVAL'"
}

if [[ -d /sys/firmware/efi ]];then
    disk_partition()
    {
        local disk="$1"

        parted -s "$disk" --align optimal   \
            mklabel gpt                     \
            mkpart nigrub         1MB  16MB \
            mkpart nirestore     16MB 1200MB \
            mkpart nilrt        1200MB  100%

        sgdisk --typecode=1:ef00 $disk
    }
else
    disk_partition()
    {
        local disk="$1"

        parted -s "$disk" --align optimal   \
            mklabel msdos                   \
            mkpart primary       1MB  16MB  \
            mkpart primary      16MB 1200MB  \
            mkpart primary     1200MB  100%

        sfdisk -c "$disk" 1 EF
    }
fi

partition_format()
{
    local disk="$1" label="$2"

    disk_check "$disk"
    case "$label" in
        nigrub)
            mkfs.vfat -n nigrub "$disk"1
            ;;
        nirestore)
            mkfs.ext4 -F -L nirestore "$disk"2
            ;;
        nilrt)
            mkfs.ext4 -F -L nilrt "$disk"3
            ;;
        *)
            die "Invalid or unspecified label!"
    esac
}

disk_format()
{
   local disk="$1"

   partition_format "$disk" nigrub
   partition_format "$disk" nirestore
   partition_format "$disk" nilrt
}

disk_check()
{
    local disk="$1"

    [[ -b "$disk" ]] || die "Invalid or unspecified disk!"
}

disk_setup()
{
    disk="$1"
    disk_check "$disk"
    disk_partition "$disk"
    disk_format "$disk"
}
