#!/bin/bash

# gross hack for ARM: currentgen is all soft-float but the lvnextos.ipk
# is created from next-gen + OE which is hard-float, therefore opkg on
# the target will refuse to install (arch mismatch cortexa9hf-vfpv3 vs.
# cortexa9-vfpv3). This hacks opkg.conf to allow installing lvnextos.
hack_arm_opkg_arch()
{
    echo "arch cortexa9hf-vfpv3 60" >> /etc/opkg/arch.conf
}

# currentgen's safemode needs to install the lvnextos payload to userfs
# so add it as a destination otherwise opkg won't know how to install.
add_opkg_userfs_dest()
{
    echo "dest userfs /mnt/userfs" >> /etc/opkg/opkg.conf
}

migrate_target()
{
    if [[ $target_flavor == "legacy" ]]; then
        if [[ $ARCH == "x86_64" ]]; then
            opkg update
            opkg install lvnextos
            mv /boot/.safe/bootimage.cfg /boot/.safe/bootimage_old.cfg
            cp /boot/.newNILinuxRT/bootimage.cfg /boot/.safe/
            fw_setenv consoleoutenable True
            /etc/init.d/nisetbootmode force-safemode
            reboot
        elif [[ $ARCH =~ "arm" ]]; then
	    hack_arm_opkg_arch
	    opkg update
	    if [ -f "/etc/natinst/safemode" ]; then
		# safemode ramfs is too small so we install in the userfs
		cd /mnt/userfs
		opkg download lvnextos
		add_opkg_userfs_dest
		opkg install lvnextos* -d userfs
		cp .newNILinuxRT/linux_migrate.itb /boot/linux_runmode.itb
	    else
		opkg install lvnextos
		cp /.newNILinuxRT/linux_migrate.itb /boot/linux_runmode.itb
	    fi
	    reboot
        fi
    elif [[ $target_flavor == "new" ]]; then
        if [[ $ARCH == "x86_64" ]]; then
            opkg update
            opkg install lvoldos
            mv /boot/grub.cfg /boot/grub_old.cfg
            cp /boot/.oldNILinuxRT/grub.cfg /boot/
            reboot
        elif [[ $ARCH == "arm" ]]; then
            # TODO add arm migration
            echo "Migrate ARM"
        fi
    fi
}

# check target architecture
ARCH=$(uname -m)
# check NI software version
target_flavor="legacy"
command -v nisafemodeversion > /dev/null 2>&1 || target_flavor="new"

echo
if [[  $target_flavor == "legacy" ]]; then
    echo "Continuing will partition, format and install <<to be decided the awesome name of LV NG>> to the target."
elif [[  $target_flavor == "new" ]]; then
    echo "Continuing will partition, format and install LV2016 to the target."
fi
echo "All user data will be lost and the target will no longer be discoverable from your current LV version"
echo
read -p "Do you want to continue?[y/N]" USER_AGREMENT
if [[ ${USER_AGREMENT,,} == "y" ]]; then
    migrate_target
fi
