diff -rupN libc/malloc/malloc.c libc-new/malloc/malloc.c
--- libc/malloc/malloc.c	2014-05-07 13:42:17.077887630 +0300
+++ libc-new/malloc/malloc.c	2014-05-07 13:59:19.605857791 +0300
@@ -912,10 +912,15 @@ int      __posix_memalign(void **, size_
      threshold much because it is also the minimum value for the
      maximum heap size and its alignment.  Going above 512k (i.e., 1M
      for new heaps) wastes too much address space.  */
+  /* For 64-bit platforms we are definig maximum mmap threshhold
+     to 4M. Not going to a higher value because this also influences
+     maximum heap size which is twice the size of maximum mmap threshhold.
+     It wold be wasted memory on a system that has overcommit off (and where
+     LVRT threads are memory locked). */
 # if __WORDSIZE == 32
 #  define DEFAULT_MMAP_THRESHOLD_MAX (512 * 1024)
 # else
-#  define DEFAULT_MMAP_THRESHOLD_MAX (4 * 1024 * 1024 * sizeof(long))
+#  define DEFAULT_MMAP_THRESHOLD_MAX (4 * 1024 * 1024)
 # endif
 #endif

