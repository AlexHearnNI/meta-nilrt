require nilrt.inc

DISTRO_NAME = "NI Linux Real-Time NXG"

DISTRO_VERSION = "100.1"

NILRT_RELEASE_NAME = "Panda"

DISTRO_FEATURES += "\
        x11 \
        opengl \
        bluetooth \
        bluez5 \
"

VIRTUAL-RUNTIME_mountpoint = "util-linux-mountpoint"

PREFERRED_PROVIDER_iasl = "acpica"
PREFERRED_PROVIDER_make-native = "make-native"
PREFERRED_PROVIDER_virtual/java-initial-native = "cacao-initial-native"
PREFERRED_PROVIDER_virtual/java-native = "cacao-native"

# meta-openstack uses overly-restrictive version preferences, we
# avoid build warnings by relaxing them
PREFERRED_VERSION_python-futures = "3.%"
PREFERRED_VERSION_python-sqlalchemy = "1.%"
PREFERRED_VERSION_python-greenlet = "0.4.%"

PREFERRED_VERSION_sepolgen = "1.2.1+git%"

IMAGE_LINGUAS ?= "en-us"

# Root URI of all NILRT feeds
NILRT_FEEDS_URI                        ?= "https://download.ni.com/ni-linux-rt/feeds"

# Feed URI specific to this over-arching ARCH and release of NILRT
# For ARM targets, the existing infrastructure expects the feed to live
# at .../xilinx-zynqhf/..., which will include 'all', '${TUNE_PKGARCH}', and
# '${MACHINE}'. Since using ${MACHINE_ARCH} here would duplicate the entirety
# of the 'all' and '${TUNE_PKGARCH}' dirs, we alias any arm-hf target using
# the nilrt distro to use the feed URI for 'xilinx-zynqhf'
NILRT_MACHINE_FEED_URI                  = "${NILRT_FEEDS_URI}/${NILRT_RELEASE_NAME}/${@bb.utils.contains('TUNE_FEATURES','callconvention-hard','xilinx-zynqhf','${MACHINE_ARCH}',d)}"

NILRT_OE_SUBFEED_NAMES                  = "NIOE NIOEExtras"
# Available arches in each OE subfeed
NILRT_OE_SUBFEED_ARCHES                 = "all ${MACHINE} ${TUNE_PKGARCH}"

# URIs to each subfeed
NIOE_SUBFEED_URI                       ?= "${NILRT_MACHINE_FEED_URI}/main"
NIOEExtras_SUBFEED_URI                 ?= "${NILRT_MACHINE_FEED_URI}/extra"
NI_SUBFEED_URI                         ?= "${NILRT_MACHINE_FEED_URI}/ni"
NI_DIST_SUBFEED_URI                    ?= "${NILRT_FEEDS_URI}/dist"

NI_ARM_KERNEL_SUBFEED_NAME              = "cortexa9-vfpv3-kernel"
NIARMKernel_SUBFEED_URI                ?= "${IPK_NI_SUBFEED_URI}/${NI_ARM_KERNEL_SUBFEED_NAME}"

# NI feeds to incorporate into the resulting image
NILRT_NI_FEED_URIS                     ?= "\
    NI-software##${NI_SUBFEED_URI} \
    NI-dist##${NI_DIST_SUBFEED_URI} \
"

NILRT_NI_FEED_URIS_append_armv7a = "\
    NI-${NI_ARM_KERNEL_SUBFEED_NAME}##${NIARMKernel_SUBFEED_URI} \
"

# Tell OE to build image from feeds
BUILD_IMAGES_FROM_FEEDS                 = "1"

# Get NIOE packages from local deploy feed and NI packages from web feed
IPK_NIOE_SUBFEED_URI                   ?= "file://${DEPLOY_DIR_IPK}"
IPK_NI_SUBFEED_URI                     ?= "${NI_SUBFEED_URI}"

# Configure feed URIs for image builds
IPK_FEED_URIS += "\
    NIOE-all##${IPK_NIOE_SUBFEED_URI}/all \
    NIOE-${MACHINE}##${IPK_NIOE_SUBFEED_URI}/${MACHINE} \
    NIOE-${TUNE_PKGARCH}##${IPK_NIOE_SUBFEED_URI}/${TUNE_PKGARCH} \
    NI-software##${IPK_NI_SUBFEED_URI} \
"

IPK_FEED_URIS_append_armv7a = " \
    NI-${NI_ARM_KERNEL_SUBFEED_NAME}##${NIARMKernel_SUBFEED_URI} \
"

# Base URI to NI Linux RT's Git repository
NILRT_GIT ?= "git://github.com/ni"
